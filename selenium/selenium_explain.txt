#使用selenium需设置浏览器引擎
from selenium import webdriver
driver = webdriver.Chrome()

#获取数据
driver.get('url')
time.sleep(2)#服务器缓冲
driver.close()关闭浏览器

#解析与提取数据(一个用element，多个用elements)
        方法                                作用
find_element_by_tag_name            通过元素的标签名称选择
find_element_by_class_name          通过元素的class属性选择
find_element_by_id                  通过元素的id选择
find_element_by_name                通过元素的name属性选择
find_element_by_link_text           通过链接文本获取超链接
find_element_by_partial_link_text   通过链接的部分文本获取超链接

#提取到的数据类型为WebElement类对象
WebElement.text               Tag.text   提取文字
WebElement.get_attribute()    Tag[]      输入参数：属性名，可以提取属性值

#获取网页源代码
HTML源代码字符串 = driver.page_source
type()为<class 'str'>

.send_keys()  #模拟按键输入，自动填写表单
.click()      #点击元素
.clear()      #清除元素的内容

#静默模式
from selenium import  webdriver #从selenium库中调用webdriver模块
from selenium.webdriver.chrome.options import Options # 从options模块中调用Options类

chrome_options = Options() # 实例化Option对象
chrome_options.add_argument('--headless') # 把Chrome浏览器设置为静默模式
driver = webdriver.Chrome(options = chrome_options) # 设置引擎为Chrome，在后台默默运行